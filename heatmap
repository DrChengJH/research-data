groups <- list(
  list(name = "Male", filter = "Sex == 'Male'"),
  list(name = "Female", filter = "Sex == 'Female'"),
  list(name = "0-49", filter = "Age >= '0' & Age <= '49'"),
  list(name = "50-59", filter = "Age > '49' & Age <= '59'"),
  list(name = "59-", filter = "Age > '59'"),
  list(name = "High Income", filter = "Income == 'High'"),
  list(name = "Low Income", filter = "Income == 'Low'"),
  list(name = "Medium Income", filter = "Income == 'Medium'"),
  list(name = "Unknow Income", filter = "Income == 'Unknown'"),
  
  list(name = "College/university degree", filter = "Education == 'College/university degree'"),
  list(name = "Not college degree", filter = "Education == 'Not college degree'"),
  list(name = "Employed", filter = "Employment == 'Employed'"),
  list(name = "Retired", filter = "Employment == 'Retired'"),
  list(name = "Other Employment", filter = "Employment == 'Others'"),
  list(name = "Previous smoker", filter = "Smoking_status == 'Previous'"),
  list(name = "Current smoker", filter = "Smoking_status == 'Current'"),
  list(name = "Never smoker", filter = "Smoking_status == 'Never'"),
  list(name = "Current drinker", filter = "Alcohol_status == 'Current'"),
  list(name = "Previous drinker", filter = "Alcohol_status == 'Previous'"),
  list(name = "Nondrinker", filter = "Alcohol_status == 'Never'")
)

results_df <- data.frame(
  Subgroup = character(),
  Subtype = character(),
  HR = numeric(),
  HR_CI = character(),
  Exposed_Num = integer(),
  Total_Num = integer(),
  P_Value = numeric(),
  exposure = character(),
  stringsAsFactors = FALSE
)


fit_and_extract_results <- function(data, exposure, subgroup_filter, subgroup_name) {
  for (type in unique(data$cancer_name[data$cancer_name != 0])) {
    
    temp_data <- data %>%
      filter(eval(parse(text=subgroup_filter)) & (cancer_name == type | indicator == 0))
    
    model_formula <- as.formula(paste("Surv(age_entry, age_event, indicator) ~", exposure, "+", paste(covariates_model3, collapse=" + ")))
    
    tryCatch({
      cox_model <- coxph(model_formula, data = temp_data)
      summary_model <- summary(cox_model)
      coef_table <- as.data.frame(summary_model$coefficients)
      HR <- exp(coef_table[exposure, "coef"])
      lower_ci <- exp(coef_table[exposure, "coef"] - 1.96 * coef_table[exposure, "se(coef)"])
      upper_ci <- exp(coef_table[exposure, "coef"] + 1.96 * coef_table[exposure, "se(coef)"])
      p_value <- coef_table[exposure, "Pr(>|z|)"]
      incident_cases <- sum(temp_data$indicator == 1, na.rm = TRUE)
      total_cases <- nrow(temp_data)
      
      results_df <<- rbind(results_df, data.frame(
        Subgroup = as.character(subgroup_name),
        Subtype = as.character(type),
        HR = as.numeric(round(HR, 2)),
        HR_CI = as.character(paste0(round(lower_ci, 2), "-", round(upper_ci, 2))),
        Exposed_Num = as.integer(incident_cases),
        Total_Num = as.integer(total_cases),
        P_Value = as.numeric(p_value),
        exposure = as.character(exposure)
      ))
      
      print(paste(subgroup_name, type))
      
    }, error = function(e) {
      message(paste("Error in processing:", subgroup_name, type, "-", e$message))
    })
  }
}

for (group in groups) {
  fit_and_extract_results(incident, "isolation", group$filter, group$name)
}

heatdat_isolation <- results_df
saveRDS(heatdat_isolation,"heatdat_isolation_full.rds")

results_df <- data.frame(
  Subgroup = character(),
  Subtype = character(),
  HR = numeric(),
  HR_CI = character(),
  Exposed_Num = integer(),
  Total_Num = integer(),
  P_Value = numeric(),
  exposure = character(),
  stringsAsFactors = FALSE
)

for (group in groups) {
  fit_and_extract_results(incident, "loneliness", group$filter, group$name)
}

heatdat_loneliness <- results_df

saveRDS(heatdat_loneliness,"heatdat_loneliness_full.rds")
########################################################
#heatmap
results_df <- readRDS("heatdat_isolation_full.rds")
results_df <- filter(results_df, Subtype != "NA")
get_color <- function(hr, p_value) {
  if (is.na(hr) || hr == Inf || hr == -Inf || p_value > 0.99) {
    return("white")
  }
  
  color_base <- ifelse(hr > 1, "#8B0000", "#006400")   
  if (p_value <= 0.001) {
    alpha <- 1
  } else if (p_value <= 0.01) {
    alpha <- 1 - (p_value - 0.001) / (0.01 - 0.001) * 0.5
  } else if (p_value <= 0.99) {
    alpha <- 0.5 - (p_value - 0.01) / (0.99 - 0.01) * 0.5
  } else {
    alpha <- 0.5
  }
  
  alpha <- ifelse(alpha < 0, 0, ifelse(alpha > 1, 1, alpha)) 
  color <- col2rgb(color_base) / 255
  color <- rgb(color[1], color[2], color[3], alpha = alpha)
  
  return(color)
}

results_df$color <- mapply(get_color, results_df$HR, results_df$P_Value)
########################################

results_df <- results_df %>%
  group_by(Subtype) %>%
  mutate(corrected_p = p.adjust(P_Value, method = "bonferroni")) %>%
  ungroup() 
############################

results_df <- results_df %>%
  mutate(significance = case_when(
    corrected_p < 0.05 ~ "b",
    P_Value < 0.05 ~ "a",
    TRUE ~ ""
  ))
#####################
results_dfatype <- c("0-49","50-59","59-","Male","Female","College/university degree","Not college degree",
                     "Employed","Retired","Other Employment","High Income","Medium Income",
                     "Low Income","Unknow Income", "Never smoker", "Current smoker", "Previous smoker",
                     "Nondrinker", "Current drinker", "Previous drinker")

bbbtype <- c("Melanoma", "Breast cancer", "Lung cancer", "Prostate cancer", 
             "Female genitalia cancer", "Uterine cancer", "Soft tissue cancer","Colorectal cancer","Pancreatic cancer", 
             "Bladder cancer", "Mouth cancer", "Ovarian cancer", "Stomach cancer",    
             "Esophageal cancer", "Kidney cancer", "Eye cancer", "Multiple myeloma",    
             "Leukemia", "Tonsil cancer", "Tongue cancer", "Thyroid cancer",   
             "Brain cancer", "Liver cancer", "Lymphoma", "Mesothelioma",
             "Cervix Cancer", "Biliary duct cancer", "Anus Cancer", "Small intestine cancer",
             "Laryngeal cancer", "Testis cancer","Ureter cancer"        
)
table(results_df$Subtype)

results_df$Subgroup <- factor(results_df$Subgroup, levels = results_dfatype)
results_df$Subtype <- factor(results_df$Subtype, levels = bbbtype)
results_df <- filter(results_df, Subtype != "NA")

x_levels <- length(unique(results_df$Subgroup))
y_levels <- length(unique(results_df$Subtype))

aspect_ratio <- 1 / 1 

p1 <- ggplot(results_df, aes(x = Subgroup, y = Subtype, fill = color)) +
  geom_tile(color = "black", size = 0.1) + 
  geom_text(aes(label = ifelse(significance != "", significance, "")), color = "black", size = 4, vjust = 0.5, hjust = 0.5) + 
  theme_minimal(base_size = 12) + 
  theme(
    panel.grid = element_blank(),
    panel.background = element_rect(fill = "white"),
    axis.ticks = element_blank(),
    axis.title = element_text(size = 10),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10), 
    axis.text.y = element_text(size = 10), 
    plot.title = element_text(hjust = 0.5, size = 16), 
    legend.position = "right",
    plot.caption = element_text(size = 10) 
  ) +
  labs(
    title = "Isolation Heatmap",
    x = "Subgroup",
    y = "Subtype",
    fill = "Significance",
    caption = "a p < 0.05, b p < 0.05 (after bonferroni adjusted)\nRed: Upregulation, Green: Downregulation\nColor intensity: The deeper the color, the higher the significance"
  ) + 
  scale_fill_identity() +
  coord_fixed(ratio = aspect_ratio) 
p1
ggsave("isolation_heatmap.pdf", plot = p1, width = 8, height = 8, units = "in", device = "pdf")
#################################################
#loneliness
results_df <- readRDS("heatdat_loneliness_full.rds")

results_df <- filter(results_df, Subtype != "NA")
table(results_df$Subtype,useNA = "ifany")

results_df <- filter(results_df, !is.na(Subtype))

get_color <- function(hr, p_value) {
  if (is.na(hr) || hr == Inf || hr == -Inf || p_value > 0.99) {
    return("white")
  }
  
  color_base <- ifelse(hr > 1, "#8B0000", "#006400")   
  if (p_value <= 0.001) {
    alpha <- 1
  } else if (p_value <= 0.01) {
    alpha <- 1 - (p_value - 0.001) / (0.01 - 0.001) * 0.5
  } else if (p_value <= 0.99) {
    alpha <- 0.5 - (p_value - 0.01) / (0.99 - 0.01) * 0.5
  } else {
    alpha <- 0.5
  }
  
  alpha <- ifelse(alpha < 0, 0, ifelse(alpha > 1, 1, alpha)) 
  color <- col2rgb(color_base) / 255
  color <- rgb(color[1], color[2], color[3], alpha = alpha)
  
  return(color)
}

results_df$color <- mapply(get_color, results_df$HR, results_df$P_Value)
########################################
results_df <- results_df %>%
  group_by(Subtype) %>%
  mutate(corrected_p = p.adjust(P_Value, method = "bonferroni")) %>%
  ungroup() 

############################
results_df <- results_df %>%
  mutate(significance = case_when(
    corrected_p < 0.05 ~ "b",
    P_Value < 0.05 ~ "a",
    TRUE ~ ""
  ))

#####################
results_dfatype <- c("0-49","50-59","59-","Male","Female","College/university degree","Not college degree",
                     "Employed","Retired","Other Employment","High Income","Medium Income",
                     "Low Income","Unknow Income", "Never smoker", "Current smoker", "Previous smoker",
                     "Nondrinker", "Current drinker", "Previous drinker")

bbbtype <- c("Melanoma", "Breast cancer", "Lung cancer", "Prostate cancer", 
             "Female genitalia cancer", "Uterine cancer", "Soft tissue cancer","Colorectal cancer","Pancreatic cancer",   
             "Bladder cancer", "Mouth cancer", "Ovarian cancer", "Stomach cancer",    
             "Esophageal cancer", "Kidney cancer", "Eye cancer", "Multiple myeloma",    
             "Leukemia", "Tonsil cancer", "Tongue cancer", "Thyroid cancer",   
             "Brain cancer", "Liver cancer", "Lymphoma", "Mesothelioma",
             "Cervix Cancer", "Biliary duct cancer", "Anus Cancer", "Small intestine cancer",
             "Laryngeal cancer", "Testis cancer","Ureter cancer"          
)
table(results_df$Subtype, useNA = "always")

results_df$Subgroup <- factor(results_df$Subgroup, levels = results_dfatype)
results_df$Subtype <- factor(results_df$Subtype, levels = bbbtype)
results_df <- filter(results_df, !is.na(Subtype))


x_levels <- length(unique(results_df$Subgroup))
y_levels <- length(unique(results_df$Subtype))
y_levels
aspect_ratio <- 1 / 1
p1 <- ggplot(results_df, aes(x = Subgroup, y = Subtype, fill = color)) +
  geom_tile(color = "black", size = 0.1) + 
  geom_text(aes(label = ifelse(significance != "", significance, "")), color = "black", size = 4, vjust = 0.5, hjust = 0.5) + 
  theme_minimal(base_size = 12) + 
  theme(
    panel.grid = element_blank(),
    panel.background = element_rect(fill = "white"),
    axis.ticks = element_blank(),
    axis.title = element_text(size = 10),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10), 
    axis.text.y = element_text(size = 10), 
    plot.title = element_text(hjust = 0.5, size = 16), 
    legend.position = "right",
    plot.caption = element_text(size = 10) 
  ) +
  labs(
    title = "loneliness Heatmap",
    x = "Subgroup",
    y = "Subtype",
    fill = "Significance",
    caption = "a p < 0.05, b p < 0.05 (after bonferroni adjusted)\nRed: Upregulation, Green: Downregulation\nColor intensity: The deeper the color, the higher the significance"
  ) + 
  scale_fill_identity() +
  coord_fixed(ratio = aspect_ratio) 

print(p1)
ggsave("loneliness_heatmap.pdf", plot = p1, width = 8, height = 8, units = "in", device = "pdf")
######################################################
bar_plot <- ggplot(data.frame(x = c(0, 1), y = c(0, 1)), aes(x, y)) +
  geom_tile(aes(fill = y), color = NA) +
  scale_fill_gradientn(
    colors = c("#8B0000", "white", "#006400"),  
    values = c(0, 0.5, 1),  
    guide = "colorbar",
    name = "P value",
    labels = c("<0.001", ".01", ">.99", ".01", "<0.001"),
    breaks = c(0, 0.25, 0.5, 0.75, 1)
  ) +
  theme_void() +
  theme(legend.position = "right")

legend <- cowplot::get_legend(bar_plot)

legend_plot <- ggdraw() + draw_grob(legend)

ggsave("legend_plot.pdf", legend_plot, width = 2, height = 6)
###################################################################
results_df <- readRDS("heatdat_isolation_full.rds")
results_dfatype <- c("0-49","50-59","59-","Male","Female","College/university degree","Not college degree",
                     "Employed","Retired","Other Employment","High Income","Medium Income",
                     "Low Income","Unknow Income", "Never smoker", "Current smoker", "Previous smoker",
                     "Nondrinker", "Current drinker", "Previous drinker")

bbbtype <- c("Melanoma", "Breast cancer", "Lung cancer", "Prostate cancer", 
             "Female genitalia cancer", "Uterine cancer", "Soft tissue cancer","Colorectal cancer","Pancreatic cancer",   
             "Bladder cancer", "Mouth cancer", "Ovarian cancer", "Stomach cancer",    
             "Esophageal cancer", "Kidney cancer", "Eye cancer", "Multiple myeloma",    
             "Leukemia", "Tonsil cancer", "Tongue cancer", "Thyroid cancer",   
             "Brain cancer", "Liver cancer", "Lymphoma", "Mesothelioma",
             "Cervix Cancer", "Biliary duct cancer", "Anus Cancer", "Small intestine cancer",
             "Laryngeal cancer", "Testis cancer","Ureter cancer"          
)
table(results_df$Subtype, useNA = "always")

results_df$Subgroup <- factor(results_df$Subgroup, levels = results_dfatype)
results_df$Subtype <- factor(results_df$Subtype, levels = bbbtype)
###########################################
results_df$HR_CI <- ifelse(
  is.na(results_df$HR),
  " ",
  sprintf('%.2f [%s]', results_df$HR, results_df$HR_CI)
)

head(results_df)
HR_CI <- reshape2::dcast(results_df, Subtype ~ Subgroup, value.var = "HR_CI")

Num <- results_df %>%
  mutate(Total_Exposed = paste(Exposed_Num, "/", Total_Num, sep = "")) %>%
  dplyr::select(Subtype, Subgroup, Total_Exposed)
Num <- reshape2::dcast(Num, Subtype ~ Subgroup, value.var = "Total_Exposed")
############################savve
HR_CI1 <- HR_CI[,c(1:11)]
doc <- read_docx()

doc <- doc %>%
  body_add_table(value = HR_CI1, style = "table_template")
print(doc, target = "heatmap_isolation_HR_CI1.docx")
######################################
HR_CI2 <- HR_CI[,c(1,12:21)]
doc <- read_docx()

doc <- doc %>%
  body_add_table(value = HR_CI2, style = "table_template")

print(doc, target = "heatmap_isolation_HR_CI2.docx")
###############################################
Num1 <- Num[,c(1:11)]
doc <- read_docx()

doc <- doc %>%
  body_add_table(value = Num1, style = "table_template")

print(doc, target = "heatmap_isolation_Num1.docx")
###############################################
Num2 <- Num[,c(1,12:21)]
doc <- read_docx()

doc <- doc %>%
  body_add_table(value = Num2, style = "table_template")

print(doc, target = "heatmap_isolation_Num2.docx")
############################################################
results_df <- readRDS("heatdat_loneliness_full.rds")
results_dfatype <- c("0-49","50-59","59-","Male","Female","College/university degree","Not college degree",
                     "Employed","Retired","Other Employment","High Income","Medium Income",
                     "Low Income","Unknow Income", "Never smoker", "Current smoker", "Previous smoker",
                     "Nondrinker", "Current drinker", "Previous drinker")

bbbtype <- c("Melanoma", "Breast cancer", "Lung cancer", "Prostate cancer", 
             "Female genitalia cancer", "Uterine cancer", "Soft tissue cancer","Colorectal cancer","Pancreatic cancer",   
             "Bladder cancer", "Mouth cancer", "Ovarian cancer", "Stomach cancer",    
             "Esophageal cancer", "Kidney cancer", "Eye cancer", "Multiple myeloma",    
             "Leukemia", "Tonsil cancer", "Tongue cancer", "Thyroid cancer",   
             "Brain cancer", "Liver cancer", "Lymphoma", "Mesothelioma",
             "Cervix Cancer", "Biliary duct cancer", "Anus Cancer", "Small intestine cancer",
             "Laryngeal cancer", "Testis cancer","Ureter cancer"          
)
table(results_df$Subtype, useNA = "always")

results_df$Subgroup <- factor(results_df$Subgroup, levels = results_dfatype)
results_df$Subtype <- factor(results_df$Subtype, levels = bbbtype)
###########################################
results_df$HR_CI <- ifelse(
  is.na(results_df$HR),
  " ",
  sprintf('%.2f [%s]', results_df$HR, results_df$HR_CI)
)

HR_CI <- reshape2::dcast(results_df, Subtype ~ Subgroup, value.var = "HR_CI")


Num <- results_df %>%
  mutate(Total_Exposed = paste(Exposed_Num, "/", Total_Num, sep = "")) %>%
  dplyr::select(Subtype, Subgroup, Total_Exposed)
Num <- reshape2::dcast(Num, Subtype ~ Subgroup, value.var = "Total_Exposed")

############################savve
HR_CI1 <- HR_CI[,c(1:11)]
doc <- read_docx()

doc <- doc %>%
  body_add_table(value = HR_CI1, style = "table_template")

print(doc, target = "heatmap_loneliness_HR_CI1.docx")

#############################
HR_CI2 <- HR_CI[,c(1,12:21)]
doc <- read_docx()

doc <- doc %>%
  body_add_table(value = HR_CI2, style = "table_template")

print(doc, target = "heatmap_loneliness_HR_CI2.docx")
###############################################
Num1 <- Num[,c(1:11)]
doc <- read_docx()

doc <- doc %>%
  body_add_table(value = Num1, style = "table_template")

print(doc, target = "heatmap_loneliness_Num1.docx")

###############################################
Num2 <- Num[,c(1,12:21)]
doc <- read_docx()

doc <- doc %>%
  body_add_table(value = Num2, style = "table_template")

print(doc, target = "heatmap_loneliness_Num2.docx")
##########################################################
